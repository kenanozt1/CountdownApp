<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>